@model ReadingListPlus.Persistence.Models.Deck

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>@(Resources.Resources.ItemCollection)</h4>

        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control focused" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2" id="DeckType">
                <div>
                    @Html.RadioButtonFor(model => model.Type, "Predictable")<span>Predictable</span>
                </div>
                <div>
                    @Html.RadioButtonFor(model => model.Type, "Randomized")<span>Randomized</span>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-1">
                <input type="submit" value="Save" class="btn btn-success btn-block" />
            </div>
            <div class="col-md-offset-4 col-md-1">
                @Html.ActionLink("Delete", "Delete", new { id = Model.ID }, new { @Class = "btn btn-danger" })
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
