@page

@model CardCreateModel

@{
    ViewData[Constants.ViewTitle] = "Create";
}

@section scripts {
    <script src="~/js/App/CreateCard.js"></script>
}

<h2>Create @Resources.Item</h2>

<hr />

<form method="post">
    <input type="hidden" asp-for="AllowDeckSelection" />
    <input type="hidden" asp-for="Card.CardType" />
    <input type="hidden" asp-for="Card.CreationMode" />
    <input type="hidden" asp-for="Card.ParentCardID" />
    <input type="hidden" asp-for="Card.ParentCardUpdatedText" />
    <input type="hidden" asp-for="Card.OldDeckID" />

    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    @if (Model.AllowDeckSelection)
    {
        <div class="form-group row">
            <label asp-for="Card.DeckID" class="col-form-label col-md-2 @(Model.Card.DeckID == null ? "font-weight-bold" : string.Empty)"></label>
            <div class="col-md-8">
                <select asp-for="Card.DeckID" asp-items="@(new SelectList(Model.DeckListItems, "ID", "Title"))" class="form-control no-zoom">
                    @if (Model.Card.DeckID == null)
                    {
                        <option></option>
                    }
                </select>
                <span asp-validation-for="Card.DeckID" class="text-danger"></span>
            </div>
            <div class="col-md-2">
                <button formnovalidate type="submit" name="action" value="@CreateAction.CreateDeck" class="btn btn-outline-secondary btn-block">New @Resources.Collection</button>
            </div>
        </div>
    }
    else
    {
        <input type="hidden" asp-for="Card.DeckID" />
        <input type="hidden" asp-for="Card.DeckTitle" />

        <div class="form-group row">
            <label class="col-form-label col-md-2">@Resources.Collection</label>
            <div class="col-md-8">
                <p class="form-control-plaintext">@Model.Card.DeckTitle</p>
            </div>
        </div>
    }

    <div class="form-group row">
        <label asp-for="Card.Url" class="col-form-label col-md-2"></label>
        <div class="col-md-8">
            <input asp-for="Card.Url" class="form-control no-zoom" />
            <span asp-validation-for="Card.Url" class="text-danger"></span>
        </div>

        @if (!Model.AllowDeckSelection)
        {
            <div class="col-md-2">
                <a href="javascript:undefined" id="import-button" class="btn btn-outline-secondary btn-block">Import</a>
            </div>
        }

    </div>

    <div class="form-group row">
        <label asp-for="Card.Title" class="col-form-label col-md-2"></label>
        <div class="col-md-8">
            <input asp-for="Card.Title" class="form-control no-zoom" />
            <span asp-validation-for="Card.Title" class="text-danger"></span>
        </div>
    </div>

    <div class="form-group row">
        <label asp-for="Card.Text" class="col-form-label col-md-2 font-weight-bold"></label>
        <div class="col-md-8">
            <textarea asp-for="Card.Text" class="form-control no-zoom" autofocus></textarea>
            <span asp-validation-for="Card.Text" class="text-danger"></span>
        </div>
    </div>

    @if (Model.ShowPriorities)
    {
        <div class="form-group row">
            <label asp-for="Card.Priority" class="col-form-label col-md-2 @(Model.Card.Priority == null ? "font-weight-bold" : string.Empty)"></label>
            <div class="col-md-8">
                <select asp-for="Card.Priority" asp-items="@(new SelectList(Model.PriorityList, "Key", "Value"))" class="form-control no-zoom">
                    @if (Model.Card.Priority == null)
                    {
                        <option></option>
                    }
                </select>
                <span asp-validation-for="Card.Priority" class="text-danger"></span>
            </div>
        </div>
    }
    else
    {
        <input type="hidden" asp-for="Card.Priority" />
    }

    <div class="form-group row">
        <div class="offset-md-2 col-md-2">
            <button type="submit" name="action" value="@CreateAction.CreateCard" class="btn btn-success btn-block">Create</button>
        </div>
    </div>

    <div class="form-group row">
        <div class="offset-md-2 col-md-2">

            @switch (Model.Card.CreationMode)
            {
                case CreationMode.Add:
                    <a asp-page="@CardIndexModel.PageName" asp-route-deckId="@Model.Card.DeckID" class="btn btn-outline-secondary btn-block">Back</a>
                    break;
                case CreationMode.Extract:
                    <a asp-page="@CardReadModel.PageName" asp-route-id="@Model.Card.ParentCardID" class="btn btn-outline-secondary btn-block">Back</a>
                    break;
            }

        </div>
    </div>
</form>
