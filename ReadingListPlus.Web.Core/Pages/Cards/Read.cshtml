@page "{id:Guid?}"

@model CardReadModel

@{
    ViewData[Constants.ViewTitle] = $"{Model.Card.DeckTitle} - Review";
}

@inject ISettings settings

@section scripts {
    <script src="~/js/App/TextConverter.js"></script>
    <script src="~/js/App/Cards.js"></script>
}

<form id="myForm" method="post">
    <input type="hidden" asp-for="Card.ID" />
    <input type="hidden" asp-for="Card.Selection" />
    <input type="hidden" asp-for="Card.NextAction" />
    <input type="hidden" asp-for="Card.DeckID" />
    <input type="hidden" asp-for="Card.IsBookmarked" />
    <input type="hidden" asp-for="Card.Type" value="@Model.Card.Type.ToString("d")" />
    <input type="hidden" asp-for="Card.Priority" />

    @switch (Model.Card.NewRepetitionCardState)
    {
        case NewRepetitionCardState.None:
            <div id="topPanel" class="actions topPanel">
                <a asp-page="@CardEditModel.PageName" asp-route-id="@Model.Card.ID" asp-route-returnUrl="@Url.Action(nameof(DecksController.Read), DecksController.Name, new { Id = Model.Card.DeckID })" class="btn btn-default">Edit @Resources.Item</a>

                @if (Model.Card.ParentCardID != null)
                {
                    <a asp-page="@CardReadModel.PageName" asp-route-id="@Model.Card.ParentCardID" class="btn btn-default">Parent @Resources.Item</a>
                }

                <a asp-page="@CardIndexModel.PageName" asp-route-deckID="@Model.Card.DeckID" class="btn btn-default">Queue</a>
            </div>

            <hr />

            <div id="mainPanel" class="actions mainPanel">
                <div class="selection-panel">
                    @if (settings.ExtractEnabled)
                    {
                        <a href="javascript:undefined" id="Extract" class="act btn btn-primary disabled">Extract</a>
                    }

                    @if (settings.BookmarkEnabled)
                    {
                        <a href="javascript:undefined" id="Bookmark" class="act btn btn-primary disabled">Bookmark</a>
                    }

                    @if (settings.RememberEnabled)
                    {
                        <a href="javascript:undefined" id="Remember" class="act btn btn-primary disabled">Remember</a>
                    }

                    @if (settings.HighlightEnabled)
                    {
                        <a href="javascript:undefined" id="Highlight" class="act btn btn-primary disabled">Highlight</a>
                    }

                    @if (settings.ClozeEnabled)
                    {
                        <a href="javascript:undefined" id="Cloze" class="act btn btn-primary disabled">Cloze</a>
                    }

                    @if (settings.DropEnabled)
                    {
                        <a href="javascript:undefined" id="DeleteRegion" class="act btn btn-danger">Drop</a>
                    }
                </div>

                <div class="postpone-panel">
                    <label>New priority:</label>
                    <div class="btn-group">
                        <a href="javascript:undefined" id="PostponeHigh" class="act btn btn-primary">@Resources.HighPriority</a>
                        <a href="javascript:undefined" id="PostponeMedium" class="act btn btn-primary">@Resources.MediumPriority</a>
                        <a href="javascript:undefined" id="PostponeLow" class="act btn btn-primary">@Resources.LowPriority</a>
                    </div>
                </div>
            </div>
            break;
        case NewRepetitionCardState.Pending:
            <h4>Please finish the new repetition card creation.</h4>
            <a href="javascript:undefined" id="CancelRepetitionCardCreation" class="act btn btn-danger">Cancel</a>
            <hr />
            break;
        case NewRepetitionCardState.Done:
            <h4>The new repetition card has been created.</h4>
            <a href="javascript:undefined" id="CompleteRepetitionCardCreation" class="act btn btn-success">OK</a>
            <hr />
            break;
        default:
            break;
    }


    <div id="ModalDialog" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Confirmation</h4>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to evaluate the note without bookmarking it first?</p>
                </div>
                <div class="modal-footer">
                    <button id="YesButton" type="button" class="btn btn-primary">Yes</button>
                    <button id="NoButton" type="button" class="btn btn-default" data-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div>

    @if (!string.IsNullOrEmpty(Model.Card.Url))
    {
        <hr />
        <label>Source:</label>
        <a href="@Model.Card.Url" class="url">@Model.Card.Url</a>
        <hr />
    }

    @if (!string.IsNullOrEmpty(Model.Card.Title))
    {
        <h2>
            @Html.DisplayFor(model => model.Card.Title)
        </h2>
    }

    <p class="article" id="article">
        @Html.Raw(Model.Card.HtmlText)
    </p>

    @if (Model.Card.NewRepetitionCardState == NewRepetitionCardState.None)
    {
        <hr />

        <div id="bottomPanel" class="actions">
            <a asp-controller="@CardsController.Name" asp-action="@nameof(CardsController.Hide)" asp-route-id="@Model.Card.ID" asp-route-returnUrl="@Url.Action(nameof(DecksController.Read), DecksController.Name, new { Id = Model.Card.DeckID })" class="btn btn-default">Hide @Resources.Item</a>
        </div>
    }
</form>
