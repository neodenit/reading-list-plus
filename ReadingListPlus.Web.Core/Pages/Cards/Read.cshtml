@page "{id:Guid?}"

@model CardReadModel

@{
    var segments = new[] { Model.Card.Title, Model.Card.DeckTitle, "Review" };

    ViewData[Constants.ViewTitle] = string.Join(" - ", segments.Where(s => !string.IsNullOrEmpty(s)));
}

@inject ISettings settings

@section scripts {
    <script src="~/js/App/TextConverter.js"></script>
    <script src="~/js/App/Cards.js"></script>
}

<form id="myForm" method="post">
    <input type="hidden" asp-for="Card.ID" />
    <input type="hidden" asp-for="Card.Selection" />
    <input type="hidden" asp-for="Card.NextAction" />
    <input type="hidden" asp-for="Card.DeckID" />
    <input type="hidden" asp-for="Card.CardType" />
    <input type="hidden" asp-for="Card.Priority" />
    <input type="hidden" asp-for="Card.Position" />
    <input type="hidden" asp-for="PositionMessage" />
    <input type="hidden" asp-for="BookmarkMessage" />
    <input type="hidden" asp-for="IsBookmarked" />

    @{
        var mobile = "d-md-none btn-lg";
        var desktop = "d-none d-md-inline-block";
        var topPanelButton = "btn btn-outline-secondary";
        var selectionButton = "act btn btn-primary disabled";
    }

    @switch (Model.Card.NewRepetitionCardState)
    {
        case NewRepetitionCardState.None:
            <div id="topPanel" class="actions topPanel d-flex pt-1">
                <div class="ml-auto ml-md-0">
                    <a asp-page="@DeckIndexModel.PageName" class="@mobile @topPanelButton oi oi-home"></a>
                    <a asp-page="@DeckIndexModel.PageName" class="@desktop @topPanelButton">Topics</a>

                    <a asp-page="@CardEditModel.PageName" asp-route-id="@Model.Card.ID" asp-route-returnUrl="@Url.Action(nameof(DecksController.Read), DecksController.Name, new { Id = Model.Card.DeckID })" class="@mobile @topPanelButton oi oi-pencil"></a>
                    <a asp-page="@CardEditModel.PageName" asp-route-id="@Model.Card.ID" asp-route-returnUrl="@Url.Page(CardReadModel.PageName, new { Model.Card.ID })" class="@desktop @topPanelButton">Edit @Resources.Item</a>

                    <a asp-page="@CardIndexModel.PageName" asp-route-deckId="@Model.Card.DeckID" class="@mobile @topPanelButton oi oi-list"></a>
                    <a asp-page="@CardIndexModel.PageName" asp-route-deckId="@Model.Card.DeckID" class="@desktop @topPanelButton">Queue</a>

                    @if (Model.Card.ParentCardID != null)
                    {
                        <a asp-page="@CardReadModel.PageName" asp-route-id="@Model.Card.ParentCardID" class="@mobile @topPanelButton oi oi-caret-top"></a>
                        <a asp-page="@CardReadModel.PageName" asp-route-id="@Model.Card.ParentCardID" class="@desktop @topPanelButton">Parent @Resources.Item</a>
                    }

                </div>
            </div>

            <div id="mainPanel" class="actions">
                <div class="row pb-1">
                    @if (Model.Card.IsConnected)
                    {
                        <div class="col-md-7 d-flex flex-nowrap pt-1">
                            <div class="selection-panel ml-auto ml-md-0">

                                @if (settings.ExtractEnabled)
                                {
                                    <a href="javascript:undefined" data-act="@CardAction.Extract" class="@mobile @selectionButton oi oi-file"></a>
                                    <a href="javascript:undefined" data-act="@CardAction.Extract" class="@desktop @selectionButton">Extract</a>
                                }

                                @if (settings.BookmarkEnabled)
                                {
                                    <a href="javascript:undefined" data-act="@CardAction.Bookmark" class="@mobile @selectionButton oi oi-bookmark"></a>
                                    <a href="javascript:undefined" data-act="@CardAction.Bookmark" class="@desktop @selectionButton">Bookmark</a>
                                }

                                @if (settings.RememberEnabled)
                                {
                                    <a href="javascript:undefined" data-act="@CardAction.Remember" class="@mobile @selectionButton oi oi-eye"></a>
                                    <a href="javascript:undefined" data-act="@CardAction.Remember" class="@desktop @selectionButton">Remember</a>
                                }

                                @if (settings.HighlightEnabled)
                                {
                                    <a href="javascript:undefined" data-act="@CardAction.Highlight" class="@mobile @selectionButton oi oi-brush"></a>
                                    <a href="javascript:undefined" data-act="@CardAction.Highlight" class="@desktop @selectionButton">Highlight</a>
                                }

                                @if (settings.ClozeEnabled)
                                {
                                    <a href="javascript:undefined" data-act="@CardAction.Cloze" class="@mobile @selectionButton oi oi-lock-locked"></a>
                                    <a href="javascript:undefined" data-act="@CardAction.Cloze" class="@desktop @selectionButton">Cloze</a>
                                }

                            </div>
                        </div>

                        <div class="col-md-4 d-flex pt-1">
                            <div class="ml-auto">
                                <label for="priority-buttons">Priority</label>
                                <div id="priority-buttons" class="btn-group">
                                    <a href="javascript:undefined" data-act="@CardAction.Postpone" data-priority="@Priority.High" class="act btn btn-primary">@Resources.HighPriority</a>
                                    <a href="javascript:undefined" data-act="@CardAction.Postpone" data-priority="@Priority.Medium" class="act btn btn-primary">@Resources.MediumPriority</a>
                                    <a href="javascript:undefined" data-act="@CardAction.Postpone" data-priority="@Priority.Low" class="act btn btn-primary">@Resources.LowPriority</a>
                                </div>
                            </div>
                        </div>
                    }

                    <div class="@(Model.Card.IsConnected ? string.Empty : "offset-11") col-md-1 d-flex pt-1">
                        <div id="delete-panel" class="ml-auto ml-md-0 d-none">
                            @if (settings.DropEnabled)
                            {
                                <a href="javascript:undefined" data-act="@CardAction.DeleteRegion" class="@mobile act btn btn-danger d-md-none oi oi-x"></a>
                                <a href="javascript:undefined" data-act="@CardAction.DeleteRegion" class="@desktop act btn btn-danger d-none d-md-inline-block">Drop</a>
                            }
                        </div>
                    </div>
                </div>
            </div>

            break;
        case NewRepetitionCardState.Pending:
            <h4>Please finish the new repetition card creation.</h4>
            <a href="javascript:undefined" data-act="CancelRepetitionCardCreation" class="act btn btn-danger">Cancel</a>
            break;
        case NewRepetitionCardState.Done:
            <h4>The new repetition card has been created.</h4>
            <a href="javascript:undefined" data-act="CompleteRepetitionCardCreation" class="act btn btn-success">OK</a>
            break;
        default:
            break;
    }


    <div id="ModalDialog" class="modal fade" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirmation</h5>
                    <button type="button" class="close" data-dismiss="modal"><span>&times;</span></button>
                </div>
                <div class="modal-body">
                    <p id="comfirmation-message"></p>
                </div>
                <div class="modal-footer">
                    <button id="YesButton" type="button" class="btn btn-primary">Yes</button>
                    <button id="NoButton" type="button" class="btn btn-outline-secondary" data-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div>

    <hr />

    @if (!string.IsNullOrEmpty(Model.Card.Url))
    {
        <label>Source:</label>
        <a href="@Model.Card.Url" class="url">@Model.Card.Url</a>
        <hr />
    }

    @if (!string.IsNullOrEmpty(Model.Card.Title))
    {
        <h2>
            @Html.DisplayFor(model => model.Card.Title)
        </h2>
    }

    <p class="article" id="article">
        @Html.Raw(Model.Card.HtmlText)
    </p>

    @if (Model.Card.NewRepetitionCardState == NewRepetitionCardState.None)
    {

        <hr />

        <div id="bottomPanel" class="actions">

            @if (Model.Card.IsConnected)
            {
                <a asp-controller="@CardsController.Name" asp-action="@nameof(CardsController.Hide)" asp-route-id="@Model.Card.ID" asp-route-returnUrl="@Url.Action(nameof(DecksController.Read), DecksController.Name, new { Id = Model.Card.DeckID })" class="btn btn-outline-secondary">Hide @Resources.Item</a>
            }
            else
            {
                <a asp-page="@CardRestoreModel.PageName" asp-route-id="@Model.Card.ID" asp-route-returnUrl="@Url.Action(nameof(DecksController.Read), DecksController.Name, new { Id = Model.Card.DeckID })" class="btn btn-success">Restore @Resources.Item</a>
                <a asp-page="@CardDeleteModel.PageName" asp-route-id="@Model.Card.ID" asp-route-returnUrl="@Url.Action(nameof(DecksController.Read), DecksController.Name, new { Id = Model.Card.DeckID })" class="btn btn-danger">Delete @Resources.Item</a>
            }

        </div>

    }

</form>
